/*---------------------------------------------------------- 
    各要素(h1,h2,li,olなど)には
    意図していない余白(marginなど)が設定されていることがあるため、
    以下のcssで初めに全て初期化している。
----------------------------------------------------------*/
* {
    margin: 0;
    padding: 0;
}


/*
    修正箇所:
    ・HTMLにmainタグの追加とcssの並び替え(今回はhtmlに記載されている順にしました。)
    ・marginなどの初期化(これは趣味によるみたいです。実務でも使われるみたいなので書いときました。)
    ・margin初期化に伴う微調整
    ・height,widthをvh,vw(画面の縦幅や横幅に応じて長さを指定する単位)を使って明記
    
    P.S.
    　tableは色々と制約が多いので調べながら試すことが多いです。テーブル二つ任せたのは実はここの調整がむずかしくええ塩梅の重さだと感じたためです。
*/

/*=============================
    headerコンテンツ
=============================*/

header{
    /* text-align: center; */
    border-bottom: solid 5px #A0D7FA;
    height: 10vh;   /* 画面の縦幅に応じて10％程度の割合を取得し適用 */
}

h2{
    text-align: center;
    padding-top: 1rem;
}

h4{
    text-align: right;
}

/*=============================
    mainコンテンツ
=============================*/
main {
    height: 80vh;   /* 画面の縦幅に応じて80％程度の割合を取得し適用 */
}

.update-button {
    align-items: center;
    display: flex;
    height: 10vh;
    justify-content: end;   /* 水平方向の場所指定 display:flexを指定しているので使用できる。*/
}

.update {
    color: white;
    background-color: #FF4000;
    padding: 10px 20px;
    margin-right: 1rem; /* 1rem = 16px ちょっとした空間に使うようにしてます */
}

.main__inner{
    height: 60vh;
    width: 100vw;
    justify-content: center;
    display: flex;
}

table {
    border-collapse: collapse; /* ボーダーを重ねて表示 */
    width: 80vw;
}

th,td {
    border: 1px solid black;
    width: 15%;
    padding: 10px 20px;
}

tr[color='blue'] {
    background-color: #A0D7FA;
}

tr[color='gray'] {
    background-color: #D9D9D9;
}

tr[color='orange'] {
    background-color: #DFAB7E; 
}

.sum-button {
    align-items: center;
    display: flex;
    height: 10vh;
    text-align: right;
    justify-content: end;
}

.sum{
    color: black;
    background-color: #D9D9D9;
    padding: 10px 20px;
    margin-right: 1rem;
}

/*=============================
    footerコンテンツ
=============================*/

footer {
    align-items: center;    /* 垂直方向の中央寄せが可能。 footerのcssのところでdisplay:flexを指定しているので使用できる。 */
    border-top: solid 5px #A0D7FA;
    display: flex;  /* 要素の配置などを調整するときに重宝する */
    height: 10vh;   /* 画面の縦幅に応じて10％程度の割合を取得し適用 */
}

.return {
    color: white;
    background-color: rgb(80, 80, 80);
    height: 3rem;
    margin-left: 1rem;
    width: 10rem;
}




